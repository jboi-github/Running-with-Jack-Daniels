//
//  TestData.swift
//  Run!Tests
//
//  Created by JÃ¼rgen Boiselle on 14.12.21.
//

import Foundation
import CoreLocation
import XCTest
@testable import Run_

enum Action {
    case location(seconds: TimeInterval, latitude: CLLocationDegrees, longitude: CLLocationDegrees)
    case heartrate(seconds: TimeInterval, heartrate: Int)
    case motion(seconds: TimeInterval, idx: Int)
}

let actions: [Action] = [
    .heartrate(seconds: 7, heartrate: 50),
    .heartrate(seconds: 12, heartrate: 55),
    .heartrate(seconds: 17, heartrate: 60),
    .heartrate(seconds: 22, heartrate: 65),
    .heartrate(seconds: 27, heartrate: 70),
    .location(seconds: 31, latitude: 49.714157506945, longitude: 9.27123500981339),
    .heartrate(seconds: 32, heartrate: 75),
    .heartrate(seconds: 37, heartrate: 80),
    .heartrate(seconds: 42, heartrate: 85),
    .heartrate(seconds: 47, heartrate: 90),
    .heartrate(seconds: 52, heartrate: 95),
    .heartrate(seconds: 57, heartrate: 100),
    .location(seconds: 61, latitude: 49.7144363137203, longitude: 9.2701891463517),
    .heartrate(seconds: 62, heartrate: 105),
    .motion(seconds: 59, idx: 0),
    .heartrate(seconds: 67, heartrate: 110),
    .heartrate(seconds: 72, heartrate: 115),
    .heartrate(seconds: 77, heartrate: 120),
    .heartrate(seconds: 82, heartrate: 125),
    .heartrate(seconds: 87, heartrate: 130),
    .location(seconds: 91, latitude: 49.7146735948198, longitude: 9.26904695335765),
    .heartrate(seconds: 92, heartrate: 135),
    .heartrate(seconds: 97, heartrate: 140),
    .heartrate(seconds: 102, heartrate: 145),
    .heartrate(seconds: 107, heartrate: 150),
    .heartrate(seconds: 112, heartrate: 155),
    .heartrate(seconds: 117, heartrate: 160),
    .location(seconds: 121, latitude: 49.7150710380709, longitude: 9.2677900823589),
    .heartrate(seconds: 122, heartrate: 165),
    .motion(seconds: 119, idx: 1),
    .heartrate(seconds: 127, heartrate: 170),
    .heartrate(seconds: 132, heartrate: 175),
    .heartrate(seconds: 137, heartrate: 180),
    .heartrate(seconds: 142, heartrate: 185),
    .heartrate(seconds: 147, heartrate: 180),
    .location(seconds: 151, latitude: 49.7154091588674, longitude: 9.26677632873767),
    .heartrate(seconds: 152, heartrate: 175),
    .heartrate(seconds: 157, heartrate: 170),
    .heartrate(seconds: 162, heartrate: 165),
    .heartrate(seconds: 167, heartrate: 160),
    .heartrate(seconds: 172, heartrate: 155),
    .heartrate(seconds: 177, heartrate: 150),
    .location(seconds: 181, latitude: 49.7154951716865, longitude: 9.26652862424016),
    .heartrate(seconds: 182, heartrate: 145),
    .motion(seconds: 179, idx: 2),
    .heartrate(seconds: 187, heartrate: 140),
    .heartrate(seconds: 192, heartrate: 135),
    .heartrate(seconds: 197, heartrate: 130),
    .heartrate(seconds: 202, heartrate: 125),
    .heartrate(seconds: 207, heartrate: 120),
    .location(seconds: 211, latitude: 49.7159756542404, longitude: 9.26485432527843),
    .heartrate(seconds: 212, heartrate: 115),
    .heartrate(seconds: 217, heartrate: 110),
    .heartrate(seconds: 222, heartrate: 105),
    .heartrate(seconds: 227, heartrate: 100),
    .heartrate(seconds: 232, heartrate: 95),
    .heartrate(seconds: 237, heartrate: 90),
    .location(seconds: 241, latitude: 49.7168476289596, longitude: 9.26536349564731),
    .heartrate(seconds: 242, heartrate: 85),
    .motion(seconds: 239, idx: 3),
    .heartrate(seconds: 247, heartrate: 80),
    .heartrate(seconds: 252, heartrate: 75),
    .heartrate(seconds: 257, heartrate: 70),
    .heartrate(seconds: 262, heartrate: 65),
    .heartrate(seconds: 267, heartrate: 60),
    .location(seconds: 271, latitude: 49.7181259037245, longitude: 9.26595523418507),
    .heartrate(seconds: 272, heartrate: 55),
    .heartrate(seconds: 277, heartrate: 50),
    .heartrate(seconds: 282, heartrate: 45),
    .heartrate(seconds: 287, heartrate: 50),
    .heartrate(seconds: 292, heartrate: 55),
    .heartrate(seconds: 297, heartrate: 60),
    .location(seconds: 301, latitude: 49.7188643812558, longitude: 9.26629009397571),
    .heartrate(seconds: 302, heartrate: 65),
    .motion(seconds: 299, idx: 2),
    .heartrate(seconds: 307, heartrate: 70),
    .heartrate(seconds: 312, heartrate: 75),
    .heartrate(seconds: 317, heartrate: 80),
    .heartrate(seconds: 322, heartrate: 85),
    .heartrate(seconds: 327, heartrate: 90),
    .location(seconds: 331, latitude: 49.7193893162652, longitude: 9.26656532120319),
    .heartrate(seconds: 332, heartrate: 95),
    .heartrate(seconds: 337, heartrate: 100),
    .heartrate(seconds: 342, heartrate: 105),
    .heartrate(seconds: 347, heartrate: 110),
    .heartrate(seconds: 352, heartrate: 115),
    .heartrate(seconds: 357, heartrate: 120),
    .location(seconds: 361, latitude: 49.7197540982687, longitude: 9.26708366581495),
    .heartrate(seconds: 362, heartrate: 125),
    .motion(seconds: 359, idx: 1),
    .heartrate(seconds: 367, heartrate: 130),
    .heartrate(seconds: 372, heartrate: 135),
    .heartrate(seconds: 377, heartrate: 140),
    .heartrate(seconds: 382, heartrate: 145),
    .heartrate(seconds: 387, heartrate: 150),
    .location(seconds: 391, latitude: 49.7199883877213, longitude: 9.26732219607581),
    .heartrate(seconds: 392, heartrate: 155),
    .heartrate(seconds: 397, heartrate: 160),
    .heartrate(seconds: 402, heartrate: 165),
    .heartrate(seconds: 407, heartrate: 170),
    .heartrate(seconds: 412, heartrate: 175),
    .heartrate(seconds: 417, heartrate: 180),
    .location(seconds: 421, latitude: 49.7202197103582, longitude: 9.26739559000313),
    .heartrate(seconds: 422, heartrate: 185),
    .motion(seconds: 419, idx: 0),
    .heartrate(seconds: 427, heartrate: 180),
    .heartrate(seconds: 432, heartrate: 175),
    .heartrate(seconds: 437, heartrate: 170),
    .heartrate(seconds: 442, heartrate: 165),
    .heartrate(seconds: 447, heartrate: 160),
    .location(seconds: 451, latitude: 49.7206230395134, longitude: 9.26712953701659),
    .heartrate(seconds: 452, heartrate: 155),
    .heartrate(seconds: 457, heartrate: 150),
    .heartrate(seconds: 462, heartrate: 145),
    .heartrate(seconds: 467, heartrate: 140),
    .heartrate(seconds: 472, heartrate: 135),
    .heartrate(seconds: 477, heartrate: 130),
    .location(seconds: 481, latitude: 49.7211865084392, longitude: 9.26723962790758),
    .heartrate(seconds: 482, heartrate: 125),
    .motion(seconds: 479, idx: 1),
    .heartrate(seconds: 487, heartrate: 120),
    .heartrate(seconds: 492, heartrate: 115),
    .heartrate(seconds: 497, heartrate: 110),
    .heartrate(seconds: 502, heartrate: 105),
    .heartrate(seconds: 507, heartrate: 100),
    .location(seconds: 511, latitude: 49.722301564533, longitude: 9.26761577178362),
    .heartrate(seconds: 512, heartrate: 95),
    .heartrate(seconds: 517, heartrate: 90),
    .heartrate(seconds: 522, heartrate: 85),
    .heartrate(seconds: 527, heartrate: 80),
    .heartrate(seconds: 532, heartrate: 75),
    .heartrate(seconds: 537, heartrate: 70),
    .location(seconds: 541, latitude: 49.7238406557587, longitude: 9.26806530958582),
    .heartrate(seconds: 542, heartrate: 65),
    .motion(seconds: 539, idx: 2),
    .heartrate(seconds: 547, heartrate: 60),
    .heartrate(seconds: 552, heartrate: 55),
    .heartrate(seconds: 557, heartrate: 50),
    .heartrate(seconds: 562, heartrate: 45),
    .heartrate(seconds: 567, heartrate: 50),
    .location(seconds: 571, latitude: 49.726032071371, longitude: 9.26890016550582),
    .heartrate(seconds: 572, heartrate: 55),
    .heartrate(seconds: 577, heartrate: 60),
    .heartrate(seconds: 582, heartrate: 65),
    .heartrate(seconds: 587, heartrate: 70),
    .heartrate(seconds: 592, heartrate: 75),
    .heartrate(seconds: 597, heartrate: 80),
    .location(seconds: 601, latitude: 49.7260409673084, longitude: 9.26881759733758),
    .heartrate(seconds: 602, heartrate: 85),
    .motion(seconds: 599, idx: 3),
    .heartrate(seconds: 607, heartrate: 90),
    .heartrate(seconds: 612, heartrate: 95),
    .heartrate(seconds: 617, heartrate: 100),
    .heartrate(seconds: 622, heartrate: 105),
    .heartrate(seconds: 627, heartrate: 110),
    .location(seconds: 631, latitude: 49.7259490425431, longitude: 9.26866622236246),
    .heartrate(seconds: 632, heartrate: 115),
    .heartrate(seconds: 637, heartrate: 120),
    .heartrate(seconds: 642, heartrate: 125),
    .heartrate(seconds: 647, heartrate: 130),
    .heartrate(seconds: 652, heartrate: 135),
    .heartrate(seconds: 657, heartrate: 140),
    .location(seconds: 661, latitude: 49.7258274643603, longitude: 9.26794145733009),
    .heartrate(seconds: 662, heartrate: 145),
    .motion(seconds: 659, idx: 2),
    .heartrate(seconds: 667, heartrate: 150),
    .heartrate(seconds: 672, heartrate: 155),
    .heartrate(seconds: 677, heartrate: 160),
    .heartrate(seconds: 682, heartrate: 165),
    .heartrate(seconds: 687, heartrate: 170),
    .location(seconds: 691, latitude: 49.7257414698521, longitude: 9.26781301795727),
    .heartrate(seconds: 692, heartrate: 175),
    .heartrate(seconds: 697, heartrate: 180),
    .heartrate(seconds: 702, heartrate: 185),
    .heartrate(seconds: 707, heartrate: 180),
    .heartrate(seconds: 712, heartrate: 175),
    .heartrate(seconds: 717, heartrate: 170),
    .location(seconds: 721, latitude: 49.7253648714182, longitude: 9.26770292706627),
    .heartrate(seconds: 722, heartrate: 165),
    .motion(seconds: 719, idx: 1),
    .heartrate(seconds: 727, heartrate: 160),
    .heartrate(seconds: 732, heartrate: 155),
    .heartrate(seconds: 737, heartrate: 150),
    .heartrate(seconds: 742, heartrate: 145),
    .heartrate(seconds: 747, heartrate: 140),
    .location(seconds: 751, latitude: 49.7241846463518, longitude: 9.2673772415166),
    .heartrate(seconds: 752, heartrate: 135),
    .heartrate(seconds: 757, heartrate: 130),
    .heartrate(seconds: 762, heartrate: 125),
    .heartrate(seconds: 767, heartrate: 120),
    .heartrate(seconds: 772, heartrate: 115),
    .heartrate(seconds: 777, heartrate: 110),
    .location(seconds: 781, latitude: 49.7228887380443, longitude: 9.26716164685649),
    .heartrate(seconds: 782, heartrate: 105),
    .motion(seconds: 779, idx: 0),
    .heartrate(seconds: 787, heartrate: 100),
    .heartrate(seconds: 792, heartrate: 95),
    .heartrate(seconds: 797, heartrate: 90),
    .heartrate(seconds: 802, heartrate: 85),
    .heartrate(seconds: 807, heartrate: 80),
    .location(seconds: 811, latitude: 49.7221424582182, longitude: 9.26693861304293),
    .heartrate(seconds: 812, heartrate: 75),
    .heartrate(seconds: 817, heartrate: 70),
    .heartrate(seconds: 822, heartrate: 65),
    .heartrate(seconds: 827, heartrate: 60),
    .heartrate(seconds: 832, heartrate: 55),
    .heartrate(seconds: 837, heartrate: 50),
    .location(seconds: 841, latitude: 49.7221424582182, longitude: 9.26699050903849),
    .heartrate(seconds: 842, heartrate: 45),
    .motion(seconds: 839, idx: 1),
    .heartrate(seconds: 847, heartrate: 50),
    .heartrate(seconds: 852, heartrate: 55),
    .heartrate(seconds: 857, heartrate: 60),
    .heartrate(seconds: 862, heartrate: 65),
    .heartrate(seconds: 867, heartrate: 70),
    .location(seconds: 871, latitude: 49.7212030350796, longitude: 9.26668778240197),
    .heartrate(seconds: 872, heartrate: 75),
    .heartrate(seconds: 877, heartrate: 80),
    .heartrate(seconds: 882, heartrate: 85),
    .heartrate(seconds: 887, heartrate: 90),
    .heartrate(seconds: 892, heartrate: 95),
    .heartrate(seconds: 897, heartrate: 100),
    .location(seconds: 901, latitude: 49.7209849521179, longitude: 9.26660128907604),
    .heartrate(seconds: 902, heartrate: 105),
    .motion(seconds: 899, idx: 2),
    .heartrate(seconds: 907, heartrate: 110),
    .heartrate(seconds: 912, heartrate: 115),
    .heartrate(seconds: 917, heartrate: 120),
    .heartrate(seconds: 922, heartrate: 125),
    .heartrate(seconds: 927, heartrate: 130),
    .location(seconds: 931, latitude: 49.7206829894768, longitude: 9.26703375570569),
    .heartrate(seconds: 932, heartrate: 135),
    .heartrate(seconds: 937, heartrate: 140),
    .heartrate(seconds: 942, heartrate: 145),
    .heartrate(seconds: 947, heartrate: 150),
    .heartrate(seconds: 952, heartrate: 155),
    .heartrate(seconds: 957, heartrate: 160),
    .location(seconds: 961, latitude: 49.7202020821345, longitude: 9.26690401571679),
    .heartrate(seconds: 962, heartrate: 165),
    .motion(seconds: 959, idx: 3),
    .heartrate(seconds: 967, heartrate: 170),
    .heartrate(seconds: 972, heartrate: 175),
    .heartrate(seconds: 977, heartrate: 180),
    .heartrate(seconds: 982, heartrate: 185),
    .heartrate(seconds: 987, heartrate: 180),
    .location(seconds: 991, latitude: 49.7198497865022, longitude: 9.2665839904141),
    .heartrate(seconds: 992, heartrate: 175),
    .heartrate(seconds: 997, heartrate: 170),
    .heartrate(seconds: 1002, heartrate: 165),
    .heartrate(seconds: 1007, heartrate: 160),
    .heartrate(seconds: 1012, heartrate: 155),
    .heartrate(seconds: 1017, heartrate: 150),
    .location(seconds: 1021, latitude: 49.7199392586455, longitude: 9.2660823291237),
    .heartrate(seconds: 1022, heartrate: 145),
    .motion(seconds: 1019, idx: 2),
    .heartrate(seconds: 1027, heartrate: 140),
    .heartrate(seconds: 1032, heartrate: 135),
    .heartrate(seconds: 1037, heartrate: 130),
    .heartrate(seconds: 1042, heartrate: 125),
    .heartrate(seconds: 1047, heartrate: 120),
    .location(seconds: 1051, latitude: 49.7199057066111, longitude: 9.26560661583108),
    .heartrate(seconds: 1052, heartrate: 115),
    .heartrate(seconds: 1057, heartrate: 110),
    .heartrate(seconds: 1062, heartrate: 105),
    .heartrate(seconds: 1067, heartrate: 100),
    .heartrate(seconds: 1072, heartrate: 95),
    .heartrate(seconds: 1077, heartrate: 90),
    .location(seconds: 1081, latitude: 49.7195254486008, longitude: 9.26568445982442),
    .heartrate(seconds: 1082, heartrate: 85),
    .motion(seconds: 1079, idx: 1),
    .heartrate(seconds: 1087, heartrate: 80),
    .heartrate(seconds: 1092, heartrate: 75),
    .heartrate(seconds: 1097, heartrate: 70),
    .heartrate(seconds: 1102, heartrate: 65),
    .heartrate(seconds: 1107, heartrate: 60),
    .location(seconds: 1111, latitude: 49.7190277534705, longitude: 9.26532118785551),
    .heartrate(seconds: 1112, heartrate: 55),
    .heartrate(seconds: 1117, heartrate: 50),
    .heartrate(seconds: 1122, heartrate: 45),
    .heartrate(seconds: 1127, heartrate: 50),
    .heartrate(seconds: 1132, heartrate: 55),
    .heartrate(seconds: 1137, heartrate: 60),
    .location(seconds: 1141, latitude: 49.7189215032875, longitude: 9.26519144786661),
    .heartrate(seconds: 1142, heartrate: 65),
    .motion(seconds: 1139, idx: 0),
    .heartrate(seconds: 1147, heartrate: 70),
    .heartrate(seconds: 1152, heartrate: 75),
    .heartrate(seconds: 1157, heartrate: 80),
    .heartrate(seconds: 1162, heartrate: 85),
    .heartrate(seconds: 1167, heartrate: 90),
    .location(seconds: 1171, latitude: 49.7186586728887, longitude: 9.26525199319476),
    .heartrate(seconds: 1172, heartrate: 95),
    .heartrate(seconds: 1177, heartrate: 100),
    .heartrate(seconds: 1182, heartrate: 105),
    .heartrate(seconds: 1187, heartrate: 110),
    .heartrate(seconds: 1192, heartrate: 115),
    .heartrate(seconds: 1197, heartrate: 120),
    .location(seconds: 1201, latitude: 49.7182448519307, longitude: 9.26510495454068),
    .heartrate(seconds: 1202, heartrate: 125),
    .motion(seconds: 1199, idx: 1),
    .heartrate(seconds: 1207, heartrate: 130),
    .heartrate(seconds: 1212, heartrate: 135),
    .heartrate(seconds: 1217, heartrate: 140),
    .heartrate(seconds: 1222, heartrate: 145),
    .heartrate(seconds: 1227, heartrate: 150),
    .location(seconds: 1231, latitude: 49.7173221302904, longitude: 9.26475898124513),
    .heartrate(seconds: 1232, heartrate: 155),
    .heartrate(seconds: 1237, heartrate: 160),
    .heartrate(seconds: 1242, heartrate: 165),
    .heartrate(seconds: 1247, heartrate: 170),
    .heartrate(seconds: 1252, heartrate: 175),
    .heartrate(seconds: 1257, heartrate: 180),
    .location(seconds: 1261, latitude: 49.7172102840577, longitude: 9.26456004659548),
    .heartrate(seconds: 1262, heartrate: 185),
    .motion(seconds: 1259, idx: 2),
    .heartrate(seconds: 1267, heartrate: 180),
    .heartrate(seconds: 1272, heartrate: 175),
    .heartrate(seconds: 1277, heartrate: 170),
    .heartrate(seconds: 1282, heartrate: 165),
    .heartrate(seconds: 1287, heartrate: 160),
    .location(seconds: 1291, latitude: 49.7169865908193, longitude: 9.26424867062213),
    .heartrate(seconds: 1292, heartrate: 155),
    .heartrate(seconds: 1297, heartrate: 150),
    .heartrate(seconds: 1302, heartrate: 145),
    .heartrate(seconds: 1307, heartrate: 140),
    .heartrate(seconds: 1312, heartrate: 135),
    .heartrate(seconds: 1317, heartrate: 130),
    .location(seconds: 1321, latitude: 49.716432945623, longitude: 9.26382485332507),
    .heartrate(seconds: 1322, heartrate: 125),
    .motion(seconds: 1319, idx: 3),
    .heartrate(seconds: 1327, heartrate: 120),
    .heartrate(seconds: 1332, heartrate: 115),
    .heartrate(seconds: 1337, heartrate: 110),
    .heartrate(seconds: 1342, heartrate: 105),
    .heartrate(seconds: 1347, heartrate: 100),
    .location(seconds: 1351, latitude: 49.7162707655319, longitude: 9.26371241200136),
    .heartrate(seconds: 1352, heartrate: 95),
    .heartrate(seconds: 1357, heartrate: 90),
    .heartrate(seconds: 1362, heartrate: 85),
    .heartrate(seconds: 1367, heartrate: 80),
    .heartrate(seconds: 1372, heartrate: 75),
    .heartrate(seconds: 1377, heartrate: 70),
    .location(seconds: 1381, latitude: 49.7156500022083, longitude: 9.2634702306951),
    .heartrate(seconds: 1382, heartrate: 65),
    .motion(seconds: 1379, idx: 2),
    .heartrate(seconds: 1387, heartrate: 60),
    .heartrate(seconds: 1392, heartrate: 55),
    .heartrate(seconds: 1397, heartrate: 50),
    .heartrate(seconds: 1402, heartrate: 45),
    .heartrate(seconds: 1407, heartrate: 50),
    .location(seconds: 1411, latitude: 49.714637749564, longitude: 9.26300316673507),
    .heartrate(seconds: 1412, heartrate: 55),
    .heartrate(seconds: 1417, heartrate: 60),
    .heartrate(seconds: 1422, heartrate: 65),
    .heartrate(seconds: 1427, heartrate: 70),
    .heartrate(seconds: 1432, heartrate: 75),
    .heartrate(seconds: 1437, heartrate: 80),
    .location(seconds: 1441, latitude: 49.7136142903103, longitude: 9.26219012948033),
    .heartrate(seconds: 1442, heartrate: 85),
    .motion(seconds: 1439, idx: 1),
    .heartrate(seconds: 1447, heartrate: 90),
    .heartrate(seconds: 1452, heartrate: 95),
    .heartrate(seconds: 1457, heartrate: 100),
    .heartrate(seconds: 1462, heartrate: 105),
    .heartrate(seconds: 1467, heartrate: 110),
    .location(seconds: 1471, latitude: 49.7125852166856, longitude: 9.26158467619881),
    .heartrate(seconds: 1472, heartrate: 115),
    .heartrate(seconds: 1477, heartrate: 120),
    .heartrate(seconds: 1482, heartrate: 125),
    .heartrate(seconds: 1487, heartrate: 130),
    .heartrate(seconds: 1492, heartrate: 135),
    .heartrate(seconds: 1497, heartrate: 140),
    .location(seconds: 1501, latitude: 49.7121489723726, longitude: 9.26142898821214),
    .heartrate(seconds: 1502, heartrate: 145),
    .motion(seconds: 1499, idx: 0),
    .heartrate(seconds: 1507, heartrate: 150),
    .heartrate(seconds: 1512, heartrate: 155),
    .heartrate(seconds: 1517, heartrate: 160),
    .heartrate(seconds: 1522, heartrate: 165),
    .heartrate(seconds: 1527, heartrate: 170),
    .location(seconds: 1531, latitude: 49.7118525477191, longitude: 9.26132519622102),
    .heartrate(seconds: 1532, heartrate: 175),
    .heartrate(seconds: 1537, heartrate: 180),
    .heartrate(seconds: 1542, heartrate: 185),
    .heartrate(seconds: 1547, heartrate: 180),
    .heartrate(seconds: 1552, heartrate: 175),
    .heartrate(seconds: 1557, heartrate: 170),
    .location(seconds: 1561, latitude: 49.7121042291305, longitude: 9.26261394677473),
    .heartrate(seconds: 1562, heartrate: 165),
    .motion(seconds: 1559, idx: 1),
    .heartrate(seconds: 1567, heartrate: 160),
    .heartrate(seconds: 1572, heartrate: 155),
    .heartrate(seconds: 1577, heartrate: 150),
    .heartrate(seconds: 1582, heartrate: 145),
    .heartrate(seconds: 1587, heartrate: 140),
    .location(seconds: 1591, latitude: 49.7120427071247, longitude: 9.26422272263705),
    .heartrate(seconds: 1592, heartrate: 135),
    .heartrate(seconds: 1597, heartrate: 130),
    .heartrate(seconds: 1602, heartrate: 125),
    .heartrate(seconds: 1607, heartrate: 120),
    .heartrate(seconds: 1612, heartrate: 115),
    .heartrate(seconds: 1617, heartrate: 110),
    .location(seconds: 1621, latitude: 49.7121042291305, longitude: 9.26493196790969),
    .heartrate(seconds: 1622, heartrate: 105),
    .motion(seconds: 1619, idx: 2),
    .heartrate(seconds: 1627, heartrate: 100),
    .heartrate(seconds: 1632, heartrate: 95),
    .heartrate(seconds: 1637, heartrate: 90),
    .heartrate(seconds: 1642, heartrate: 85),
    .heartrate(seconds: 1647, heartrate: 80),
    .location(seconds: 1651, latitude: 49.7118861053037, longitude: 9.26503575990081),
    .heartrate(seconds: 1652, heartrate: 75),
    .heartrate(seconds: 1657, heartrate: 70),
    .heartrate(seconds: 1662, heartrate: 65),
    .heartrate(seconds: 1667, heartrate: 60),
    .heartrate(seconds: 1672, heartrate: 55),
    .heartrate(seconds: 1677, heartrate: 50),
    .location(seconds: 1681, latitude: 49.7118581406397, longitude: 9.26406703465038),
    .heartrate(seconds: 1682, heartrate: 45),
    .motion(seconds: 1679, idx: 3),
    .heartrate(seconds: 1687, heartrate: 50),
    .heartrate(seconds: 1692, heartrate: 55),
    .heartrate(seconds: 1697, heartrate: 60),
    .heartrate(seconds: 1702, heartrate: 65),
    .heartrate(seconds: 1707, heartrate: 70),
    .location(seconds: 1711, latitude: 49.7119196628793, longitude: 9.2626571934377),
    .heartrate(seconds: 1712, heartrate: 75),
    .heartrate(seconds: 1717, heartrate: 80),
    .heartrate(seconds: 1722, heartrate: 85),
    .heartrate(seconds: 1727, heartrate: 90),
    .heartrate(seconds: 1732, heartrate: 95),
    .heartrate(seconds: 1737, heartrate: 100),
    .location(seconds: 1741, latitude: 49.7118805123722, longitude: 9.26235446679694),
    .heartrate(seconds: 1742, heartrate: 105),
    .motion(seconds: 1739, idx: 2),
    .heartrate(seconds: 1747, heartrate: 110),
    .heartrate(seconds: 1752, heartrate: 115),
    .heartrate(seconds: 1757, heartrate: 120),
    .heartrate(seconds: 1762, heartrate: 125),
    .heartrate(seconds: 1767, heartrate: 130),
    .location(seconds: 1771, latitude: 49.7116735734533, longitude: 9.26180955884357),
    .heartrate(seconds: 1772, heartrate: 135),
    .heartrate(seconds: 1777, heartrate: 140),
    .heartrate(seconds: 1782, heartrate: 145),
    .heartrate(seconds: 1787, heartrate: 150),
    .heartrate(seconds: 1792, heartrate: 155),
    .heartrate(seconds: 1797, heartrate: 160),
    .location(seconds: 1801, latitude: 49.7114162968112, longitude: 9.26139439087911),
    .heartrate(seconds: 1802, heartrate: 165),
    .motion(seconds: 1799, idx: 1),
    .heartrate(seconds: 1807, heartrate: 170),
    .heartrate(seconds: 1812, heartrate: 175),
    .heartrate(seconds: 1817, heartrate: 180),
    .heartrate(seconds: 1822, heartrate: 185),
    .heartrate(seconds: 1827, heartrate: 180),
    .location(seconds: 1831, latitude: 49.7108122506434, longitude: 9.26110031357094),
    .heartrate(seconds: 1832, heartrate: 175),
    .heartrate(seconds: 1837, heartrate: 170),
    .heartrate(seconds: 1842, heartrate: 165),
    .heartrate(seconds: 1847, heartrate: 160),
    .heartrate(seconds: 1852, heartrate: 155),
    .heartrate(seconds: 1857, heartrate: 150),
    .location(seconds: 1861, latitude: 49.7098446424593, longitude: 9.26072839228337),
    .heartrate(seconds: 1862, heartrate: 145),
    .motion(seconds: 1859, idx: 0),
    .heartrate(seconds: 1867, heartrate: 140),
    .heartrate(seconds: 1872, heartrate: 135),
    .heartrate(seconds: 1877, heartrate: 130),
    .heartrate(seconds: 1882, heartrate: 125),
    .heartrate(seconds: 1887, heartrate: 120),
    .location(seconds: 1891, latitude: 49.7092573564507, longitude: 9.26026132832334),
    .heartrate(seconds: 1892, heartrate: 115),
    .heartrate(seconds: 1897, heartrate: 110),
    .heartrate(seconds: 1902, heartrate: 105),
    .heartrate(seconds: 1907, heartrate: 100),
    .heartrate(seconds: 1912, heartrate: 95),
    .heartrate(seconds: 1917, heartrate: 90),
    .location(seconds: 1921, latitude: 49.7088490486603, longitude: 9.26020943232778),
    .heartrate(seconds: 1922, heartrate: 85),
    .motion(seconds: 1919, idx: 1),
    .heartrate(seconds: 1927, heartrate: 80),
    .heartrate(seconds: 1932, heartrate: 75),
    .heartrate(seconds: 1937, heartrate: 70),
    .heartrate(seconds: 1942, heartrate: 65),
    .heartrate(seconds: 1947, heartrate: 60),
    .location(seconds: 1951, latitude: 49.7084742973937, longitude: 9.26003644567592),
    .heartrate(seconds: 1952, heartrate: 55),
    .heartrate(seconds: 1957, heartrate: 50),
    .heartrate(seconds: 1962, heartrate: 45),
    .heartrate(seconds: 1967, heartrate: 50),
    .heartrate(seconds: 1972, heartrate: 55),
    .heartrate(seconds: 1977, heartrate: 60),
    .location(seconds: 1981, latitude: 49.7077751268143, longitude: 9.25987210835835),
    .heartrate(seconds: 1982, heartrate: 65),
    .motion(seconds: 1979, idx: 2),
    .heartrate(seconds: 1987, heartrate: 70),
    .heartrate(seconds: 1992, heartrate: 75),
    .heartrate(seconds: 1997, heartrate: 80),
    .heartrate(seconds: 2002, heartrate: 85),
    .heartrate(seconds: 2007, heartrate: 90),
    .location(seconds: 2011, latitude: 49.7073612131129, longitude: 9.25975966703464),
    .heartrate(seconds: 2012, heartrate: 95),
    .heartrate(seconds: 2017, heartrate: 100),
    .heartrate(seconds: 2022, heartrate: 105),
    .heartrate(seconds: 2027, heartrate: 110),
    .heartrate(seconds: 2032, heartrate: 115),
    .heartrate(seconds: 2037, heartrate: 120),
    .location(seconds: 2041, latitude: 49.7071262875512, longitude: 9.26041701631172),
    .heartrate(seconds: 2042, heartrate: 125),
    .motion(seconds: 2039, idx: 3),
    .heartrate(seconds: 2047, heartrate: 130),
    .heartrate(seconds: 2052, heartrate: 135),
    .heartrate(seconds: 2057, heartrate: 140),
    .heartrate(seconds: 2062, heartrate: 145),
    .heartrate(seconds: 2067, heartrate: 150),
    .location(seconds: 2071, latitude: 49.7081834436317, longitude: 9.26154142954882),
    .heartrate(seconds: 2072, heartrate: 155),
    .heartrate(seconds: 2077, heartrate: 160),
    .heartrate(seconds: 2082, heartrate: 165),
    .heartrate(seconds: 2087, heartrate: 170),
    .heartrate(seconds: 2092, heartrate: 175),
    .heartrate(seconds: 2097, heartrate: 180),
    .location(seconds: 2101, latitude: 49.7083792107516, longitude: 9.26161927354216),
    .heartrate(seconds: 2102, heartrate: 185),
    .motion(seconds: 2099, idx: 2),
    .heartrate(seconds: 2107, heartrate: 180),
    .heartrate(seconds: 2112, heartrate: 175),
    .heartrate(seconds: 2117, heartrate: 170),
    .heartrate(seconds: 2122, heartrate: 165),
    .heartrate(seconds: 2127, heartrate: 160),
    .location(seconds: 2131, latitude: 49.708686843203, longitude: 9.26155007888141),
    .heartrate(seconds: 2132, heartrate: 155),
    .heartrate(seconds: 2137, heartrate: 150),
    .heartrate(seconds: 2142, heartrate: 145),
    .heartrate(seconds: 2147, heartrate: 140),
    .heartrate(seconds: 2152, heartrate: 135),
    .heartrate(seconds: 2157, heartrate: 130),
    .location(seconds: 2161, latitude: 49.709089559154, longitude: 9.26183550685064),
    .heartrate(seconds: 2162, heartrate: 125),
    .motion(seconds: 2159, idx: 1),
    .heartrate(seconds: 2167, heartrate: 120),
    .heartrate(seconds: 2172, heartrate: 115),
    .heartrate(seconds: 2177, heartrate: 110),
    .heartrate(seconds: 2182, heartrate: 105),
    .heartrate(seconds: 2187, heartrate: 100),
    .location(seconds: 2191, latitude: 49.7096432880663, longitude: 9.26192200017657),
    .heartrate(seconds: 2192, heartrate: 95),
    .heartrate(seconds: 2197, heartrate: 90),
    .heartrate(seconds: 2202, heartrate: 85),
    .heartrate(seconds: 2207, heartrate: 80),
    .heartrate(seconds: 2212, heartrate: 75),
    .heartrate(seconds: 2217, heartrate: 70),
    .location(seconds: 2221, latitude: 49.7104542937668, longitude: 9.26242366146697),
    .heartrate(seconds: 2222, heartrate: 65),
    .motion(seconds: 2219, idx: 0),
    .heartrate(seconds: 2227, heartrate: 60),
    .heartrate(seconds: 2232, heartrate: 55),
    .heartrate(seconds: 2237, heartrate: 50),
    .heartrate(seconds: 2242, heartrate: 45),
    .heartrate(seconds: 2247, heartrate: 50),
    .location(seconds: 2251, latitude: 49.7118525476946, longitude: 9.26269179077325),
    .heartrate(seconds: 2252, heartrate: 55),
    .heartrate(seconds: 2257, heartrate: 60),
    .heartrate(seconds: 2262, heartrate: 65),
    .heartrate(seconds: 2267, heartrate: 70),
    .heartrate(seconds: 2272, heartrate: 75),
    .heartrate(seconds: 2277, heartrate: 80),
    .location(seconds: 2281, latitude: 49.7118805123618, longitude: 9.26310695873772),
    .heartrate(seconds: 2282, heartrate: 85),
    .motion(seconds: 2279, idx: 1),
    .heartrate(seconds: 2287, heartrate: 90),
    .heartrate(seconds: 2292, heartrate: 95),
    .heartrate(seconds: 2297, heartrate: 100),
    .heartrate(seconds: 2302, heartrate: 105),
    .heartrate(seconds: 2307, heartrate: 110),
    .location(seconds: 2311, latitude: 49.7118301759492, longitude: 9.26410163198593),
    .heartrate(seconds: 2312, heartrate: 115),
    .heartrate(seconds: 2317, heartrate: 120),
    .heartrate(seconds: 2322, heartrate: 125),
    .heartrate(seconds: 2327, heartrate: 130),
    .heartrate(seconds: 2332, heartrate: 135),
    .heartrate(seconds: 2337, heartrate: 140),
    .location(seconds: 2341, latitude: 49.7119196628689, longitude: 9.26494926658005),
    .heartrate(seconds: 2342, heartrate: 145),
    .motion(seconds: 2339, idx: 2),
    .heartrate(seconds: 2347, heartrate: 150),
    .heartrate(seconds: 2352, heartrate: 155),
    .heartrate(seconds: 2357, heartrate: 160),
    .heartrate(seconds: 2362, heartrate: 165),
    .heartrate(seconds: 2367, heartrate: 170),
    .location(seconds: 2371, latitude: 49.7120930433067, longitude: 9.26500981190821),
    .heartrate(seconds: 2372, heartrate: 175),
    .heartrate(seconds: 2377, heartrate: 180),
    .heartrate(seconds: 2382, heartrate: 185),
    .heartrate(seconds: 2387, heartrate: 180),
    .heartrate(seconds: 2392, heartrate: 175),
    .heartrate(seconds: 2397, heartrate: 170),
    .location(seconds: 2401, latitude: 49.7121601581487, longitude: 9.26567581051788),
    .heartrate(seconds: 2402, heartrate: 165),
    .motion(seconds: 2399, idx: 3),
    .heartrate(seconds: 2407, heartrate: 160),
    .heartrate(seconds: 2412, heartrate: 155),
    .heartrate(seconds: 2417, heartrate: 150),
    .heartrate(seconds: 2422, heartrate: 145),
    .heartrate(seconds: 2427, heartrate: 140),
    .location(seconds: 2431, latitude: 49.7136198830428, longitude: 9.26679157440474),
    .heartrate(seconds: 2432, heartrate: 135),
    .heartrate(seconds: 2437, heartrate: 130),
    .heartrate(seconds: 2442, heartrate: 125),
    .heartrate(seconds: 2447, heartrate: 120),
    .heartrate(seconds: 2452, heartrate: 115),
    .heartrate(seconds: 2457, heartrate: 110),
    .location(seconds: 2461, latitude: 49.7134912500469, longitude: 9.26718944370402),
    .heartrate(seconds: 2462, heartrate: 105),
    .motion(seconds: 2459, idx: 2),
    .heartrate(seconds: 2467, heartrate: 100),
    .heartrate(seconds: 2472, heartrate: 95),
    .heartrate(seconds: 2477, heartrate: 90),
    .heartrate(seconds: 2482, heartrate: 85),
    .heartrate(seconds: 2487, heartrate: 80),
    .location(seconds: 2491, latitude: 49.7137988501224, longitude: 9.26744027434922),
    .heartrate(seconds: 2492, heartrate: 75),
    .heartrate(seconds: 2497, heartrate: 70),
    .heartrate(seconds: 2502, heartrate: 65),
    .heartrate(seconds: 2507, heartrate: 60),
    .heartrate(seconds: 2512, heartrate: 55),
    .heartrate(seconds: 2517, heartrate: 50),
    .location(seconds: 2521, latitude: 49.7134912500469, longitude: 9.26838305160187),
    .heartrate(seconds: 2522, heartrate: 45),
    .motion(seconds: 2519, idx: 1),
    .heartrate(seconds: 2527, heartrate: 50),
    .heartrate(seconds: 2532, heartrate: 55),
    .heartrate(seconds: 2537, heartrate: 60),
    .heartrate(seconds: 2542, heartrate: 65),
    .heartrate(seconds: 2547, heartrate: 70),
    .location(seconds: 2551, latitude: 49.7140840775425, longitude: 9.26893660888783),
    .heartrate(seconds: 2552, heartrate: 75),
    .heartrate(seconds: 2557, heartrate: 80),
    .heartrate(seconds: 2562, heartrate: 85),
    .heartrate(seconds: 2567, heartrate: 90),
    .heartrate(seconds: 2572, heartrate: 95),
    .heartrate(seconds: 2577, heartrate: 100),
    .location(seconds: 2581, latitude: 49.7141511896332, longitude: 9.26907499820932),
    .heartrate(seconds: 2582, heartrate: 105),
    .motion(seconds: 2579, idx: 0),
    .heartrate(seconds: 2587, heartrate: 110),
    .heartrate(seconds: 2592, heartrate: 115),
    .heartrate(seconds: 2597, heartrate: 120),
    .heartrate(seconds: 2602, heartrate: 125),
    .heartrate(seconds: 2607, heartrate: 130),
    .location(seconds: 2611, latitude: 49.7146545273861, longitude: 9.26898850487916),
    .heartrate(seconds: 2612, heartrate: 135),
    .heartrate(seconds: 2617, heartrate: 140),
    .heartrate(seconds: 2622, heartrate: 145),
    .heartrate(seconds: 2627, heartrate: 150),
    .heartrate(seconds: 2632, heartrate: 155),
    .heartrate(seconds: 2637, heartrate: 160),
    .location(seconds: 2641, latitude: 49.714464378177, longitude: 9.2699658794455),
    .heartrate(seconds: 2642, heartrate: 165),
    .motion(seconds: 2639, idx: 1),
    .heartrate(seconds: 2647, heartrate: 170),
    .heartrate(seconds: 2652, heartrate: 175),
    .heartrate(seconds: 2657, heartrate: 180),
    .heartrate(seconds: 2662, heartrate: 185),
    .heartrate(seconds: 2667, heartrate: 180),
    .location(seconds: 2671, latitude: 49.7141064482631, longitude: 9.27120273400632),
    .heartrate(seconds: 2672, heartrate: 175)
]

let expectedSeconds: [TimeInterval] = [
    0, 7,12,17,22,27,31,32,37,42,47,52,57,61,62,59,67,72,77,82,87,91,92,97,102,107,112,117,121,122,119,127,132,137,142,147,151,152,157,162,167,172,177,181,182,179,187,192,197,202,207,211,212,217,222,227,232,237,241,242,239,247,252,257,262,267,271,272,277,282,287,292,297,301,302,299,307,312,317,322,327,331,332,337,342,347,352,357,361,362,359,367,372,377,382,387,391,392,397,402,407,412,417,421,422,419,427,432,437,442,447,451,452,457,462,467,472,477,481,482,479,487,492,497,502,507,511,512,517,522,527,532,537,541,542,539,547,552,557,562,567,571,572,577,582,587,592,597,601,602,599,607,612,617,622,627,631,632,637,642,647,652,657,661,662,659,667,672,677,682,687,691,692,697,702,707,712,717,721,722,719,727,732,737,742,747,751,752,757,762,767,772,777,781,782,779,787,792,797,802,807,811,812,817,822,827,832,837,841,842,839,847,852,857,862,867,871,872,877,882,887,892,897,901,902,899,907,912,917,922,927,931,932,937,942,947,952,957,961,962,959,967,972,977,982,987,991,992,997,1002,1007,1012,1017,1021,1022,1019,1027,1032,1037,1042,1047,1051,1052,1057,1062,1067,1072,1077,1081,1082,1079,1087,1092,1097,1102,1107,1111,1112,1117,1122,1127,1132,1137,1141,1142,1139,1147,1152,1157,1162,1167,1171,1172,1177,1182,1187,1192,1197,1201,1202,1199,1207,1212,1217,1222,1227,1231,1232,1237,1242,1247,1252,1257,1261,1262,1259,1267,1272,1277,1282,1287,1291,1292,1297,1302,1307,1312,1317,1321,1322,1319,1327,1332,1337,1342,1347,1351,1352,1357,1362,1367,1372,1377,1381,1382,1379,1387,1392,1397,1402,1407,1411,1412,1417,1422,1427,1432,1437,1441,1442,1439,1447,1452,1457,1462,1467,1471,1472,1477,1482,1487,1492,1497,1501,1502,1499,1507,1512,1517,1522,1527,1531,1532,1537,1542,1547,1552,1557,1561,1562,1559,1567,1572,1577,1582,1587,1591,1592,1597,1602,1607,1612,1617,1621,1622,1619,1627,1632,1637,1642,1647,1651,1652,1657,1662,1667,1672,1677,1681,1682,1679,1687,1692,1697,1702,1707,1711,1712,1717,1722,1727,1732,1737,1741,1742,1739,1747,1752,1757,1762,1767,1771,1772,1777,1782,1787,1792,1797,1801,1802,1799,1807,1812,1817,1822,1827,1831,1832,1837,1842,1847,1852,1857,1861,1862,1859,1867,1872,1877,1882,1887,1891,1892,1897,1902,1907,1912,1917,1921,1922,1919,1927,1932,1937,1942,1947,1951,1952,1957,1962,1967,1972,1977,1981,1982,1979,1987,1992,1997,2002,2007,2011,2012,2017,2022,2027,2032,2037,2041,2042,2039,2047,2052,2057,2062,2067,2071,2072,2077,2082,2087,2092,2097,2101,2102,2099,2107,2112,2117,2122,2127,2131,2132,2137,2142,2147,2152,2157,2161,2162,2159,2167,2172,2177,2182,2187,2191,2192,2197,2202,2207,2212,2217,2221,2222,2219,2227,2232,2237,2242,2247,2251,2252,2257,2262,2267,2272,2277,2281,2282,2279,2287,2292,2297,2302,2307,2311,2312,2317,2322,2327,2332,2337,2341,2342,2339,2347,2352,2357,2362,2367,2371,2372,2377,2382,2387,2392,2397,2401,2402,2399,2407,2412,2417,2422,2427,2431,2432,2437,2442,2447,2452,2457,2461,2462,2459,2467,2472,2477,2482,2487,2491,2492,2497,2502,2507,2512,2517,2521,2522,2519,2527,2532,2537,2542,2547,2551,2552,2557,2562,2567,2572,2577,2581,2582,2579,2587,2592,2597,2602,2607,2611,2612,2617,2622,2627,2632,2637,2641,2642,2639,2647,2652,2657,2662,2667,2671,2672, Date.distantFuture.timeIntervalSince1970
]

let expectedHeartrates: [Int] = [
    -1,50,55,60,65,70,70,75,80,85,90,95,100,100,105,105,110,115,120,125,130,130,135,140,145,150,155,160,160,165,165,170,175,180,185,180,180,175,170,165,160,155,150,150,145,145,140,135,130,125,120,120,115,110,105,100,95,90,90,85,85,80,75,70,65,60,60,55,50,45,50,55,60,60,65,65,70,75,80,85,90,90,95,100,105,110,115,120,120,125,125,130,135,140,145,150,150,155,160,165,170,175,180,180,185,185,180,175,170,165,160,160,155,150,145,140,135,130,130,125,125,120,115,110,105,100,100,95,90,85,80,75,70,70,65,65,60,55,50,45,50,50,55,60,65,70,75,80,80,85,85,90,95,100,105,110,110,115,120,125,130,135,140,140,145,145,150,155,160,165,170,170,175,180,185,180,175,170,170,165,165,160,155,150,145,140,140,135,130,125,120,115,110,110,105,105,100,95,90,85,80,80,75,70,65,60,55,50,50,45,45,50,55,60,65,70,70,75,80,85,90,95,100,100,105,105,110,115,120,125,130,130,135,140,145,150,155,160,160,165,165,170,175,180,185,180,180,175,170,165,160,155,150,150,145,145,140,135,130,125,120,120,115,110,105,100,95,90,90,85,85,80,75,70,65,60,60,55,50,45,50,55,60,60,65,65,70,75,80,85,90,90,95,100,105,110,115,120,120,125,125,130,135,140,145,150,150,155,160,165,170,175,180,180,185,185,180,175,170,165,160,160,155,150,145,140,135,130,130,125,125,120,115,110,105,100,100,95,90,85,80,75,70,70,65,65,60,55,50,45,50,50,55,60,65,70,75,80,80,85,85,90,95,100,105,110,110,115,120,125,130,135,140,140,145,145,150,155,160,165,170,170,175,180,185,180,175,170,170,165,165,160,155,150,145,140,140,135,130,125,120,115,110,110,105,105,100,95,90,85,80,80,75,70,65,60,55,50,50,45,45,50,55,60,65,70,70,75,80,85,90,95,100,100,105,105,110,115,120,125,130,130,135,140,145,150,155,160,160,165,165,170,175,180,185,180,180,175,170,165,160,155,150,150,145,145,140,135,130,125,120,120,115,110,105,100,95,90,90,85,85,80,75,70,65,60,60,55,50,45,50,55,60,60,65,65,70,75,80,85,90,90,95,100,105,110,115,120,120,125,125,130,135,140,145,150,150,155,160,165,170,175,180,180,185,185,180,175,170,165,160,160,155,150,145,140,135,130,130,125,125,120,115,110,105,100,100,95,90,85,80,75,70,70,65,65,60,55,50,45,50,50,55,60,65,70,75,80,80,85,85,90,95,100,105,110,110,115,120,125,130,135,140,140,145,145,150,155,160,165,170,170,175,180,185,180,175,170,170,165,165,160,155,150,145,140,140,135,130,125,120,115,110,110,105,105,100,95,90,85,80,80,75,70,65,60,55,50,50,45,45,50,55,60,65,70,70,75,80,85,90,95,100,100,105,105,110,115,120,125,130,130,135,140,145,150,155,160,160,165,165,170,175,180,185,180,180,175,175
]

let expectedIntensities: [Intensity] = [
    .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Interval, .Repetition, .Repetition, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Interval, .Repetition, .Repetition, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Interval, .Repetition, .Repetition, .Interval, .Interval, .Interval, .Threshold, .Marathon, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval, .Threshold, .Threshold, .Marathon, .Marathon, .Easy, .Easy, .Easy, .Easy, .Easy, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Cold, .Easy, .Easy, .Easy, .Easy, .Marathon, .Marathon, .Marathon, .Marathon, .Marathon, .Threshold, .Threshold, .Interval, .Repetition, .Interval, .Interval, .Interval, .Interval
]

let expectedIsActives: [Bool] = [
    false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true]

let expectedTypes: [IsActiveProducer.ActivityType] = [
    .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .unknown, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .cycling, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .running, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .pause, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking, .walking
]

let expectedSpeeds: [TimeInterval] = [
    .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, .nan, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 0.9, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 8.7, 8.7, 8.7, 8.7, 8.7, 8.7, 8.7, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.9, 4.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 0.6, 0.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.6, 3.6, 3.6, 3.6, 3.6, 3.6, 3.6, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 1.7, 1.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 3.6, 3.6, 3.6, 3.6, 3.6, 3.6, 3.6, 3.6, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 3.8, 3.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 3.5, 3.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.6, 0.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 4.8, 4.8, 4.8
]

let expectedAclStatus: [AclProducer.Status] = Array(repeating: .started(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]

let expectedBleStatus: [BleProducer.Status] = Array(repeating: .started(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]

let expectedGpsStatus: [GpsProducer.Status] = Array(repeating: .started(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]


let expectedNoHeartrates: [Int] = Array(repeating: -1, count: 669)

let expectedNoIntensities: [Intensity] = Array(repeating: .Cold, count: 669)

let expectedNoIsActives: [Bool] = Array(repeating: true, count: 669)

let expectedNoTypes: [IsActiveProducer.ActivityType] = Array(repeating: .unknown, count: 669)

let expectedNoSpeeds: [TimeInterval] = Array(repeating: .nan, count: 669)

let expectedNoAclStatus: [AclProducer.Status] = Array(repeating: .notAuthorized(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]

let expectedNoBleStatus: [BleProducer.Status] = Array(repeating: .notAuthorized(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]

let expectedNoGpsStatus: [GpsProducer.Status] = Array(repeating: .notAuthorized(asOf: Date(timeIntervalSince1970: 0)), count: 668) + [.stopped]

// MARK: - Totals

let expectedTotals = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Repetition, durationSec: 4.0, distanceM: 6.063255952049953, heartrateBpm: 185, paceSecPerKm: 659.7115529400704, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Repetition, durationSec: 8.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Repetition, durationSec: 12.0, distanceM: 33.38101745044355, heartrateBpm: 185, paceSecPerKm: 359.48574718595194, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Repetition, durationSec: 16.0, distanceM: 21.244833902493887, heartrateBpm: 185, paceSecPerKm: 753.1242688662204, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Threshold, durationSec: 17.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Interval, durationSec: 28.0, distanceM: 35.48781628791215, heartrateBpm: 178, paceSecPerKm: 789.0031827497188, vdot: 9.99761986693303),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Threshold, durationSec: 28.0, distanceM: 38.18772538853665, heartrateBpm: 168, paceSecPerKm: 733.2198950085976, vdot: 13.041484484455099),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Threshold, durationSec: 34.0, distanceM: 30.398793847850836, heartrateBpm: 168, paceSecPerKm: 1118.4654289302919, vdot: 6.486556134548383),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Interval, durationSec: 35.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Marathon, durationSec: 39.0, distanceM: 105.6320424621612, heartrateBpm: 159, paceSecPerKm: 369.2061527066498, vdot: 35.20989335774114),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Marathon, durationSec: 42.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Easy, durationSec: 57.0, distanceM: 231.19066443759053, heartrateBpm: 142, paceSecPerKm: 246.54974775327506, vdot: 68.91915517914558),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 59.0, distanceM: 76.11620323937787, heartrateBpm: 89, paceSecPerKm: 775.1306225095186, vdot: 32.23996814948529),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Marathon, durationSec: 66.0, distanceM: 74.18094804485001, heartrateBpm: 159, paceSecPerKm: 889.7163185363472, vdot: 10.35282614143924),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Threshold, durationSec: 66.0, distanceM: 138.03316477593157, heartrateBpm: 168, paceSecPerKm: 478.14595939416023, vdot: 23.57995138299865),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Interval, durationSec: 70.0, distanceM: 93.87274230525293, heartrateBpm: 178, paceSecPerKm: 745.6903706123321, vdot: 10.88667752456045),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Marathon, durationSec: 81.0, distanceM: 196.19325745057913, heartrateBpm: 159, paceSecPerKm: 412.8582248572116, vdot: 30.54100798176217),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Easy, durationSec: 90.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Easy, durationSec: 114.0, distanceM: 322.5370839147926, heartrateBpm: 142, paceSecPerKm: 353.4477295333778, vdot: 44.03612294484663),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Easy, durationSec: 138.0, distanceM: 248.57207730281243, heartrateBpm: 142, paceSecPerKm: 555.1709648863228, vdot: 24.485845551745275),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Cold, durationSec: 264.0, distanceM: 568.5323422613217, heartrateBpm: 89, paceSecPerKm: 464.3535299151976, vdot: 65.82966280812354),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Cold, durationSec: 288.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Cold, durationSec: 516.0, distanceM: 1267.057851374694, heartrateBpm: 89, paceSecPerKm: 407.24265229102673, vdot: 77.99792455915517),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Cold, durationSec: 528.0, distanceM: 1344.578933476921, heartrateBpm: 89, paceSecPerKm: 392.6879909048217, vdot: 81.70755953378878),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Interval, durationSec: 1400.0, distanceM: 4489.582526424325, heartrateBpm: 178, paceSecPerKm: 311.83300268121224, vdot: 34.793111628751724)]

let expectedTotalsNoAcl = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Repetition, durationSec: 40.0, distanceM: 80.13670861748088, heartrateBpm: 185, paceSecPerKm: 499.14702874725344, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Threshold, durationSec: 145.0, distanceM: 234.6006068889529, heartrateBpm: 168, paceSecPerKm: 618.0717173874791, vdot: 16.668492979304084),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Marathon, durationSec: 228.0, distanceM: 462.8181424673338, heartrateBpm: 159, paceSecPerKm: 492.6341019919989, vdot: 24.272620845913305),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Easy, durationSec: 399.0, distanceM: 1021.680143673648, heartrateBpm: 142, paceSecPerKm: 390.5331844517586, vdot: 38.812071170933365),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Interval, durationSec: 1533.0, distanceM: 4708.157064751289, heartrateBpm: 178, paceSecPerKm: 325.60511021969944, vdot: 32.96608989088651),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 1655.0, distanceM: 3849.653921784592, heartrateBpm: 89, paceSecPerKm: 429.90877456142556, vdot: 72.75504809795684)]

let expectedTotalsNoBle = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 59.0, distanceM: 76.11620323937787, heartrateBpm: -1, paceSecPerKm: 775.1306225095186, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Cold, durationSec: 420.0, distanceM: 985.0938467895722, heartrateBpm: -1, paceSecPerKm: 426.35531768753094, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Cold, durationSec: 480.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Cold, durationSec: 840.0, distanceM: 1735.3272467779543, heartrateBpm: -1, paceSecPerKm: 484.0585552723031, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Cold, durationSec: 2201.0, distanceM: 6524.305983492992, heartrateBpm: -1, paceSecPerKm: 337.3538895276683, vdot: .nan)]

let expectedTotalsNoGps = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Repetition, durationSec: 4.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Repetition, durationSec: 8.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Repetition, durationSec: 12.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Repetition, durationSec: 16.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Threshold, durationSec: 17.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Threshold, durationSec: 28.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Interval, durationSec: 28.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Threshold, durationSec: 34.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Interval, durationSec: 35.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Marathon, durationSec: 39.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Marathon, durationSec: 42.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Easy, durationSec: 57.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 59.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Marathon, durationSec: 66.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Threshold, durationSec: 66.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Interval, durationSec: 70.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Marathon, durationSec: 81.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Easy, durationSec: 90.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Easy, durationSec: 114.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Easy, durationSec: 138.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Cold, durationSec: 264.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Cold, durationSec: 288.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Cold, durationSec: 516.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Cold, durationSec: 528.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Interval, durationSec: 1400.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan)]

let expectedTotalsOnlyAcl = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 59.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.cycling, intensity: Run_.Intensity.Cold, durationSec: 420.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.pause, intensity: Run_.Intensity.Cold, durationSec: 480.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.running, intensity: Run_.Intensity.Cold, durationSec: 840.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.walking, intensity: Run_.Intensity.Cold, durationSec: 2201.0, distanceM: 0.0, heartrateBpm: -1, paceSecPerKm: .nan, vdot: .nan)]

let expectedTotalsOnlyBle = [
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Repetition, durationSec: 40.0, distanceM: 0.0, heartrateBpm: 185, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Threshold, durationSec: 145.0, distanceM: 0.0, heartrateBpm: 168, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Marathon, durationSec: 228.0, distanceM: 0.0, heartrateBpm: 159, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Easy, durationSec: 399.0, distanceM: 0.0, heartrateBpm: 142, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Interval, durationSec: 1533.0, distanceM: 0.0, heartrateBpm: 178, paceSecPerKm: .nan, vdot: .nan),
    Run_.TotalsService.Total(activityType: Run_.IsActiveProducer.ActivityType.unknown, intensity: Run_.Intensity.Cold, durationSec: 1655.0, distanceM: 0.0, heartrateBpm: 89, paceSecPerKm: .nan, vdot: .nan)]

let expectedTotalsOnlyGps = [
    TotalsService.Total(
        activityType: .unknown,
        intensity: .Cold,
        durationSec: 4000.0,
        distanceM: 10357.046588183295,
        heartrateBpm: -1,
        paceSecPerKm: 386.2104863527152,
        vdot: .nan)]

let expectedTotalsNonWorks = [
    TotalsService.Total(
        activityType: .unknown,
        intensity: .Cold,
        durationSec: 4000.0,
        distanceM: 0.0,
        heartrateBpm: -1,
        paceSecPerKm: .nan,
        vdot: .nan)]
